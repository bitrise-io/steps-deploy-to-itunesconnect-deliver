title: "Deploy to iTunes Connect / TestFlight (with Deliver)"
summary: Upload the archive to iTunes Connect / TestFlight and you can also submit it to TestFlight Beta Testing
description: |-
  Deploy to iTunes Connect / TestFlight, using the
  fantastic [Deliver](https://github.com/fastlane/fastlane/tree/master/deliver)
  Ruby gem.

  **If this is the very first build** of the app
  you try to deploy to iTunes Connect / TestFlight then you might want to upload the first
  build manually to make sure it fulfills the initial iTunes Connect / TestFlight submission
  verification process.

  **Be advised** that this
  step uses a well maintained, open source tool which
  uses *undocumented and unsupported APIs* (because the current
  iTunes Connect / TestFlight platform does not have a documented and supported API)
  to perform the deployment.
  This means that when the API changes
  **this step might fail until the tool is updated**.

  ## Setup guide and notes

  * Register an app on iTunes Connect / TestFlight, on the **My Apps** page. Click on the *plus sign* and select the **New App** option. This requires an **admin** account.
  * Requires an **App Store iOS distibution Provisioning Profile**
  * Every build which you want to push to iTunes Connect / TestFlight have to have a **unique build and version number** pair (*increment either or both before a new deploy to iTunes Connect*)
website: https://github.com/bitrise-io/steps-deploy-to-itunesconnect-deliver
source_code_url: https://github.com/bitrise-io/steps-deploy-to-itunesconnect-deliver
support_url: https://github.com/bitrise-io/steps-deploy-to-itunesconnect-deliver/issues
host_os_tags:
  - "osx-10.10"
project_type_tags:
  - ios
type_tags:
  - "deploy"
is_requires_admin_user: false
is_always_run: false
is_skippable: false
deps:
  brew:
  - name: go
  apt_get:
  - name: golang
    bin_name: go
toolkit:
  go:
    package_name: github.com/bitrise-io/steps-deploy-to-itunesconnect-deliver
inputs:
  - ipa_path: "$BITRISE_IPA_PATH"
    opts:
      title: "IPA path"
      summary: ""
      description: |-
        Path of the IPA file, to be deployed to iTunes Connect
  - pkg_path: "$BITRISE_PKG_PATH"
    opts:
      title: "PKG path"
      summary: ""
      description: |-
        Path of the PKG file, to be deployed to iTunes Connect
  - itunescon_user: ""
    opts:
      title: "iTunes Connect: User Apple ID (email)"
      summary: ""
      description: |-
        Login Apple ID (email) for the iTunes Connect site.

        *Make sure that this email is verified,
        your Apple ID cannot be used until you verify it
        on Apple's website!*
      is_required: true
  - password: ""
    opts:
      title: "iTunes Connect: Password"
      summary: ""
      description: |-
        Password for the specified User Apple ID.

        **Note:** if your password
        contains special characters
        and you experience problems, please
        consider changing your password
        to something with only
        alphanumeric characters.
      is_required: true
  - app_id: ""
    opts:
      title: "iTunes Connect: App Apple ID"
      summary: ""
      description: |-
        The App's *Apple ID* on iTunes Connect.

        Open the **App's page on iTunes Connect**,
        click on **App Information**, scroll down to the *General Information* section,
        copy the *Apple ID*'s value from here (numeric, like 846814360)
      is_required: true
  - submit_for_beta: "no"
    opts:
      title: "Submit for TestFlight External Testing?"
      summary: ""
      description: |
        Wait for the submission to be processed and then
        enable **TestFlight External Testing** for this specific version?

        If this option is disabled then this step won't wait
        for the new version to be processed on iTunes Connect
        and won't enable it for *TestFlight External Testing* automatically.

        *Enabling this option will wait for the submission to be
        processed which might take a couple of minutes after the
        new version is deployed to iTunes Connect*.

        **NOTE:** if this option is enabled then this step will
        fail if it can't enable TestFlight External Testing for the
        version, even if the version was successfully uploaded
        to iTunes Connect and only the TestFlight External Testing
        submission failed.
      value_options: ["yes", "no"]
      is_required: true
      is_expand: false
  - skip_metadata: "yes"
    opts:
      title: "Skip Metadata?"
      summary: ""
      description: |
        Flag to skip uploading the appstore metadata.
      value_options: ["yes", "no"]
      is_required: true
      is_expand: false
  - skip_screenshots: "yes"
    opts:
      title: "Skip Screenshots?"
      summary: ""
      description: |
        Flag to skip uploading changes to appstore screenshots.
      value_options: ["yes", "no"]
      is_required: true
      is_expand: false
  - team_id: ""
    opts:
      title: "iTunes Connect: Team ID"
      summary: ""
      description: |-
        The App's *Team ID* on iTunes Connect.

        This field is required when using iTunes Connect account
        linked to multiple publish team.

        Use this input or `team_name` to specify the team.
  - team_name: ""
    opts:
      title: "iTunes Connect: Team name"
      summary: ""
      description: |-
        The App's *Team Name* on iTunes Connect.

        This field is required when using iTunes Connect account
        linked to multiple publish team.

        Use this input or `team_id` to specify the team.
  - options: 
    opts:
      title: " Additional options for `deliver` call"
      summary: ""
      description: |-
        Options added to the end of the `deliver` call.
        
        If you want to add more options, list that separated by space character.
        Example: `--skip_metadata -skip_screenshots`
  - update_deliver: "yes"
    opts:
      title: "Update deliver gem"
      summary: ""
      description: |-
        Should the step use the latest version of `deliver` gem,
        or the preinstalled one?
      is_required: true
      value_options:
      - "yes"
      - "no"
outputs: []
